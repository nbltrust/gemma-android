apply plugin: 'com.android.application'
apply from: '../config/properties-util.gradle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

if (!rootProject.optimizeForDevelopment) {
    apply from: '../gradle/plugins/checkstyle-android.gradle'
    apply from: '../gradle/plugins/findbugs-android.gradle'
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}


android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        applicationId "com.cybex.gma.client"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        externalNativeBuild {
            cmake {
                cppFlags "-fexceptions"
                arguments '-DANDROID_STL=c++_shared',
                        '-DANDROID_TOOLCHAIN=gcc'
            }
        }

        ndk {
            //设置支持的SO库架构:ObjectBox only supports "armeabi-v7a" and "arm64-v8a" ABIs. "armeabi" is outdated.
            abiFilters 'arm64-v8a' /*, 'armeabi-v7a', 'x86' armeabi-v7a向下兼容armeabi, 'x86_64', 'arm64-v8a'*/
            //ldLibs = ["log"] //在JNI打log 必须加上log,否则会报错log函数未定义
            ldLibs "log", "z", "m", "keosdlib"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    // 解决.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command... java.exe'' finished with non-zero exit value 1问题
    dexOptions {
        javaMaxHeapSize "4g"
    }

    // rename the apk with the version name
    applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release')) {
            variant.outputs.all { output ->
                def buildName = "Fantasy"
                def type = variant.buildType.name
                def releaseApkName = buildName + '_' + type + "_" + versionName + '_' + releaseTime() + '.apk'
                outputFileName = releaseApkName
            }
        } else {
            variant.outputs.all { output ->
                def buildName = "Fantasy"
                def releaseApkName = buildName + '_' + "test" + "_" + versionName + '_' + releaseTime() + '.apk'
                outputFileName = releaseApkName
            }
        }
    }

    //signing files settings
    signingConfigs {
        if (propertyHaveSigningConfigs) {
            debug {
                storeFile file(propertyStoreFileStr)
                storePassword propertyStorePwdStr
                keyAlias propertyKeyAliasStr
                keyPassword propertyKeyPwdStr
            }

            release {
                storeFile file(propertyStoreFileStr)
                storePassword propertyStorePwdStr
                keyAlias propertyKeyAliasStr
                keyPassword propertyKeyPwdStr
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets']
            res.srcDirs = ['src/main/res']
            java.srcDirs = ['src/main/java']

        }
    }

    // 移除lint检查的error
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
        disable 'MissingTranslation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/README'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    dexOptions {
        preDexLibraries false
        javaMaxHeapSize "4g"
    }

    //build type setting
    buildTypes {
        debug {
            // 接口地址配置
            buildConfigField('int', 'API_PATH', "0")
            zipAlignEnabled true
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            buildConfigField "boolean", "DEVELOPER_MODE", "true"
            if (propertyHaveSigningConfigs) {
                signingConfig signingConfigs.debug
            }
        }

        release {
            // 接口地址配置
            buildConfigField('int', 'API_PATH', "2")
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true

            buildConfigField "boolean", "DEVELOPER_MODE", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'

            if (propertyHaveSigningConfigs) {
                signingConfig signingConfigs.release
            }
        }
    }

    //product flavors
    flavorDimensions 'cybex'
    productFlavors {
        GMA {
            manifestPlaceholders = [CHANNEL_VALUE: "gma"]
        }
//        huipai {
//            manifestPlaceholders = [CHANNEL_VALUE: "huipai"]
//        }
//        yingyongbao {
//            manifestPlaceholders = [CHANNEL_VALUE: "yingyongbao"]
//        }
//        c360 {
//            manifestPlaceholders = [CHANNEL_VALUE: "360"]
//        }
//        huawei {
//            manifestPlaceholders = [CHANNEL_VALUE: "huawei"]
//        }
//        xiaomi {
//            manifestPlaceholders = [CHANNEL_VALUE: "xiaomi"]
//        }
//        baidu {
//            manifestPlaceholders = [CHANNEL_VALUE: "baidu"]
//        }
//        oppo {
//            manifestPlaceholders = [CHANNEL_VALUE: "oppo"]
//        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.support.appcompatV7
    implementation deps.support.constraint
    implementation deps.support.design
    implementation deps.support.recyclerviewV7
    implementation deps.support.cardviewV7
    implementation deps.support.supportV4

    implementation deps.butterknife.core
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    annotationProcessor deps.butterknife.compiler
    implementation deps.gma.novacrypto
    implementation deps.gma.PatternLocker
    implementation deps.gma.happybubble
    implementation deps.gma.zxing
    implementation deps.gma.androidanimations
    api deps.gma.MaterialEditText
    implementation deps.gma.MaterialDialog
    implementation deps.gma.agentweb

    implementation deps.gma.badgeview
    annotationProcessor deps.gma.badgeviewCompiler

    implementation deps.yanzhenjie.permission
    implementation deps.third.recyclerviewadapterhelper
    implementation deps.smartrefresh.layout

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation deps.gma.svgImageViewer

    implementation project(':platform_framework:basiclib')
    implementation project(':platform_framework:base-view')
    implementation project(':platform_framework:update-app')
    implementation project(':platform_framework:customdialoglib')
    implementation project(':platform_framework:superTextview')
    implementation project(':platform_framework:validate')
    implementation project(':platform_framework:jdenticon')


}
