// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    apply from: "config.gradle"
    apply from: "utils.gradle"
    ext.kotlin_version = '1.2.30'

    repositories {
//        jcenter()
        maven { url 'http://jcenter.bintray.com'}
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        google()

        maven {
            url 'https://dl.bintray.com/leobert-lan-oss/maven/'
        }
        maven {
            url uri('../local_repo')
            name 'local-repo'
        }
    }

    dependencies {
        //classpath 'com.android.tools.build:gradle:3.1.3'
        classpath 'com.android.tools.build:gradle:3.2.0-alpha12'
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath deps.jimu.gradle_plugin


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
//        jcenter()
        maven { url 'http://jcenter.bintray.com'}
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }

        maven {
            url 'https://dl.bintray.com/leobert-lan-oss/maven/'
        }
        maven {
            url uri('../../local_repo')
            name 'local-repo'
        }
    }
}

project.ext {
    testCoverage = project.hasProperty('testCoverage')
    optimizeForDevelopment = project.hasProperty('optimizeForDevelopment') && optimizeForDevelopment == 'true'
}

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name) ||
                "com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = !rootProject.hasProperty('disablePreDex')
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

